name: DevSecOps Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  security-scan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [vote-app, worker-app, result-app]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Python Security (Vote-App)
      - name: Run Python Security Tools (Vote-App)
        if: matrix.service == 'vote-app'
        run: |
          pip install bandit safety
          bandit -r ./${{ matrix.service }}
          safety check -r ./${{ matrix.service }}/requirements.txt

      # .NET Security (Worker-App)
      - name: Run .NET Security Tools (Worker-App)
        if: matrix.service == 'worker-app'
        run: |
          dotnet list package --vulnerable
          dotnet build --configuration Release

      # Node.js Security (Result-App)
      - name: Run Node.js Security Tools (Result-App)
        if: matrix.service == 'result-app'
        run: |
          cd ./${{ matrix.service }}
          npm install
          npm audit --audit-level=critical
          npx eslint . --ext .js,.jsx

  build-and-scan:
    needs: security-scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [vote-app, worker-app, result-app]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Image (${{ matrix.service }})
        run: |
          cd ${{ matrix.service }}
          docker build -t mahnoorsaeed15/${{ matrix.service }}:latest .
          cd ..

      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push to Docker Hub (${{ matrix.service }})
        run: |
          docker tag mahnoorsaeed15/${{ matrix.service }}:latest mahnoorsaeed15/${{ matrix.service }}:latest
          docker push mahnoorsaeed15/${{ matrix.service }}:latest

      - name: Trivy Security Scan (${{ matrix.service }})
        run: |
          docker run --rm aquasec/trivy image mahnoorsaeed15/${{ matrix.service }}:latest
